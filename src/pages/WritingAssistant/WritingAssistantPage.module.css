/* src/pages/WritingAssistant/WritingAssistantPage.module.css */

.writingAssistantContainer {
  padding: var(--spacing-unit-lg);
  max-width: var(--container-max-width-xl); /* Allow wider content for editor layout */
  margin: 0 auto;
  display: flex;
  flex-direction: column;
  gap: var(--spacing-unit-lg);
}

.header {
  text-align: center;
  margin-bottom: var(--spacing-unit-md); /* Space below header */
}

.header h1 {
  margin: 0 0 var(--spacing-unit-sm) 0;
  font-size: var(--font-size-h1);
  color: var(--text-color-headings);
}

.header p {
  font-size: var(--font-size-lg);
  color: var(--text-color-muted);
}

.mainContent {
  display: flex;
  flex-direction: column; /* Default to column for smaller screens */
  gap: var(--spacing-unit-lg);
}

.templateSelectorArea {
  display: flex;
  flex-direction: column;
  gap: var(--spacing-unit-sm);
  margin-bottom: var(--spacing-unit-md); /* Add space below selector if layout is column */
}

.templateSelectorArea label {
  font-weight: var(--font-weight-bold);
  color: var(--text-color-default);
  margin-bottom: var(--spacing-unit-xs);
}

.templateSelect {
  padding: var(--spacing-unit-sm);
  font-size: var(--font-size-base);
  border: 1px solid var(--secondary-color-light);
  border-radius: var(--border-radius-md);
  background-color: var(--background-color-cards); /* Match other inputs */
}

.editorArea {
  display: flex;
  flex-direction: column;
  gap: var(--spacing-unit-md);
  flex-grow: 1; /* Takes up available space if in a row */
}

.textArea {
  width: 100%;
  padding: var(--spacing-unit-md);
  font-family: var(--font-family-monospace); /* Good for code-like templates */
  font-size: var(--font-size-base);
  border: 1px solid var(--secondary-color-light);
  border-radius: var(--border-radius-md);
  resize: vertical;
  min-height: 250px; /* Increased minimum height */
  background-color: var(--background-color-cards);
  color: var(--text-color-default);
}

.textArea:focus {
  outline: none;
  border-color: var(--primary-color);
  box-shadow: 0 0 3px var(--primary-color-light);
}

.feedbackButton {
  align-self: flex-start; /* Button doesn't stretch full width */
  padding: var(--spacing-unit-sm) var(--spacing-unit-lg);
  background-color: var(--primary-color);
  color: var(--text-color-light);
  border: none;
  border-radius: var(--border-radius-md);
  font-size: var(--font-size-base);
  font-weight: var(--font-weight-bold);
  cursor: pointer;
  transition: var(--transition-base);
}

.feedbackButton:hover:not(:disabled) {
  background-color: var(--primary-color-dark);
}

.feedbackButton:disabled {
  background-color: var(--secondary-color-light);
  cursor: not-allowed;
}

.feedbackArea {
  background-color: var(--background-color-light);
  padding: var(--spacing-unit-md);
  border-radius: var(--border-radius-lg);
  border: 1px solid var(--secondary-color-light);
  min-width: 280px; /* Adjusted minimum width for feedback area */
  flex-shrink: 0; /* Prevents shrinking if in a row */
}

.feedbackArea h3 {
  margin-top: 0;
  margin-bottom: var(--spacing-unit-sm);
  font-size: var(--font-size-h5);
  color: var(--text-color-headings);
}

.feedbackArea ul {
  list-style-type: disc; /* Use disc for feedback items */
  padding-left: var(--spacing-unit-lg);
  margin: 0;
}

.feedbackArea li {
  margin-bottom: var(--spacing-unit-sm);
  font-size: var(--font-size-base);
  color: var(--text-color-default);
  line-height: var(--line-height-base);
}

/* Responsive layout for larger screens */
@media (min-width: 992px) { /* --container-max-width-lg: 960px; */
  .mainContent {
    flex-direction: row; /* Side-by-side layout */
    align-items: flex-start; /* Align items to the top */
  }

  .templateSelectorArea {
    margin-bottom: 0; /* Remove bottom margin when in row layout */
  }
  
  .editorArea {
    /* Takes up remaining space */
  }

  .feedbackArea {
    /* Takes up a portion of the space */
    max-width: 320px; 
    align-self: stretch; /* Make feedback area same height as editor area if possible */
  }
}

@media (max-width: 768px) {
  .header h1 {
    font-size: var(--font-size-h2); /* Slightly smaller on mobile */
  }
  .header p {
    font-size: var(--font-size-base);
  }
  .textArea {
    min-height: 200px; /* Adjust as needed for mobile */
  }
  .feedbackArea {
    margin-top: var(--spacing-unit-md); /* Add space above feedback on mobile if stacked */
  }
}